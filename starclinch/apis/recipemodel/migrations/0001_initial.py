# Generated by Django 5.2.4 on 2025-07-22 18:50

import cloudinary.models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StarclinchBaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated Date')),
                ('user_type', models.CharField(choices=[('Customer', 'Customer'), ('Seller', 'Seller')], db_index=True, default='User', max_length=20, verbose_name='User Type')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('profile_picture', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='Profile Picture')),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128, region=None, unique=True)),
                ('countrycode', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email Address')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('custom_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('priority', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=5)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=20, null=True, verbose_name='Gender')),
                ('age', models.CharField(blank=True, max_length=100, null=True, verbose_name='Age')),
                ('dob', models.DateField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Super User')),
                ('is_mobile_verified', models.BooleanField(default=False, verbose_name='Is Mobile Verified')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff Member')),
                ('is_rejected', models.BooleanField(db_index=True, default=False, verbose_name='Rejected')),
                ('is_aproved', models.BooleanField(db_index=True, default=False, verbose_name='Aproved')),
                ('is_blocked', models.BooleanField(db_index=True, default=False, verbose_name='Blocked')),
                ('email_verify', models.BooleanField(default=False, verbose_name='Email Verify')),
                ('login_status', models.BooleanField(default=False, verbose_name='Login Status')),
                ('email_account_otp_verify', models.BooleanField(default=False, verbose_name='email account otp Verified')),
                ('forget_otp_verify', models.BooleanField(default=False, verbose_name='forget otp Verified')),
                ('account_otp', models.CharField(blank=True, max_length=4, null=True, verbose_name='Account OTP')),
                ('forgot_otp', models.CharField(blank=True, max_length=4, null=True, verbose_name='Forgot OTP')),
                ('account_otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('forgot_otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('account_otp_resend_count', models.IntegerField(default=0)),
                ('forgot_otp_resend_count', models.IntegerField(default=0)),
                ('account_last_otp_resend_time', models.DateTimeField(blank=True, null=True)),
                ('forgot_last_otp_resend_time', models.DateTimeField(blank=True, null=True)),
                ('token_valid_after', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_city', to='recipemodel.city')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated Date')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('is_published', models.BooleanField(db_index=True, default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated Date')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.PositiveSmallIntegerField()),
                ('review', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ratings', to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ratings', to='recipemodel.recipe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='recipemodel.country')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='recipemodel.state'),
        ),
    ]
